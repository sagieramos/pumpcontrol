/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.9-dev */

#ifndef PB_PUMP_PROTOC_PUMP_CONTROL_DATA_PB_H_INCLUDED
#define PB_PUMP_PROTOC_PUMP_CONTROL_DATA_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Enum definitions */
typedef enum _pump_MachineMode {
  pump_MachineMode_POWER_OFF = 0,
  pump_MachineMode_POWER_ON = 1,
  pump_MachineMode_AUTO = 2
} pump_MachineMode;

/* Struct definitions */
typedef struct _pump_TimeRange {
  uint32_t running;
  uint32_t resting;
} pump_TimeRange;

typedef struct _pump_ControlData {
  pump_MachineMode mode;
  bool is_running;
  bool has_time_range;
  pump_TimeRange time_range;
} pump_ControlData;

#ifdef __cplusplus
extern "C" {
#endif

/* Helper constants for enums */
#define _pump_MachineMode_MIN pump_MachineMode_POWER_OFF
#define _pump_MachineMode_MAX pump_MachineMode_AUTO
#define _pump_MachineMode_ARRAYSIZE                                            \
  ((pump_MachineMode)(pump_MachineMode_AUTO + 1))

#define pump_ControlData_mode_ENUMTYPE pump_MachineMode

/* Initializer values for message structs */
#define pump_TimeRange_init_default                                            \
  { 2400U, 1200U }
#define pump_ControlData_init_default                                          \
  { _pump_MachineMode_MAX, 0, true, pump_TimeRange_init_default }
#define pump_TimeRange_init_zero                                               \
  { 0, 0 }
#define pump_ControlData_init_zero                                             \
  { _pump_MachineMode_MIN, 0, false, pump_TimeRange_init_zero }

/* Field tags (for use in manual encoding/decoding) */
#define pump_TimeRange_running_tag 1
#define pump_TimeRange_resting_tag 2
#define pump_ControlData_mode_tag 1
#define pump_ControlData_is_running_tag 2
#define pump_ControlData_time_range_tag 3

/* Struct field encoding specification for nanopb */
#define pump_TimeRange_FIELDLIST(X, a)                                         \
  X(a, STATIC, SINGULAR, UINT32, running, 1)                                   \
  X(a, STATIC, SINGULAR, UINT32, resting, 2)
#define pump_TimeRange_CALLBACK NULL
#define pump_TimeRange_DEFAULT NULL

#define pump_ControlData_FIELDLIST(X, a)                                       \
  X(a, STATIC, SINGULAR, UENUM, mode, 1)                                       \
  X(a, STATIC, SINGULAR, BOOL, is_running, 2)                                  \
  X(a, STATIC, OPTIONAL, MESSAGE, time_range, 3)
#define pump_ControlData_CALLBACK NULL
#define pump_ControlData_DEFAULT NULL
#define pump_ControlData_time_range_MSGTYPE pump_TimeRange

extern const pb_msgdesc_t pump_TimeRange_msg;
extern const pb_msgdesc_t pump_ControlData_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define pump_TimeRange_fields &pump_TimeRange_msg
#define pump_ControlData_fields &pump_ControlData_msg

/* Maximum encoded size of messages (where known) */
#define PUMP_PROTOC_PUMP_CONTROL_DATA_PB_H_MAX_SIZE pump_ControlData_size
#define pump_ControlData_size 18
#define pump_TimeRange_size 12

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
