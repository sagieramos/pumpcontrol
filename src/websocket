#include "main.h"

AsyncWebSocket ws("/ws");
AsyncEventSource events("/events");

void onWsEvent(AsyncWebSocket *server, AsyncWebSocketClient *client,
               AwsEventType type, void *arg, uint8_t *data, size_t len) {
  switch (type) {
  case WS_EVT_CONNECT:
    DEBUG_SERIAL_PRINTLN("Websocket client connection received");
    break;
  case WS_EVT_DISCONNECT:
    DEBUG_SERIAL_PRINTLN("Websocket client connection closed");
    break;
  case WS_EVT_ERROR:
    DEBUG_SERIAL_PRINTLN("Websocket error");
    break;
  case WS_EVT_PONG:
    DEBUG_SERIAL_PRINTLN("Websocket pong");
    break;
  case WS_EVT_DATA:
    DEBUG_SERIAL_PRINTLN("Websocket data received");
    break;
  default:
    break;
  }
}

void setupWebsocket() {
  ws.onEvent(onWsEvent);
  server.addHandler(&ws);
  server.addHandler(&events);
}

void sendWsData(const char *data) { ws.textAll(data); }